{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0430\\u043D\\u0434\\u0440\\\\Documents\\\\Web\\\\Mir 1\\\\mir_frontend\\\\src\\\\pages\\\\page-reg\\\\forms\\\\form-location.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useState } from 'react';\nimport './form.css';\nimport Select from 'react-select';\nimport location from '../../../assets/icons/location.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormLocation = props => {\n  _s();\n  const [manualMode, setManualMode] = useState(false);\n  const changeMode = () => {\n    setManualMode(val => !val);\n  };\n  const countries = [{\n    value: 'belarus',\n    label: 'Беларусь'\n  }, {\n    value: 'russia',\n    label: 'Россия'\n  }, {\n    value: 'ukraine',\n    label: 'Украина'\n  }];\n  const cities = [{\n    country: 'belarus',\n    cityList: [{\n      value: 'minsk',\n      label: 'Минск'\n    }, {\n      value: 'vitebsk',\n      label: 'Витебск'\n    }, {\n      value: 'brest',\n      label: 'Брест'\n    }, {\n      value: 'lipnishki',\n      label: 'Липнишки'\n    }]\n  }, {\n    country: 'russia',\n    cityList: [{\n      value: 'moskow',\n      label: 'Москва'\n    }, {\n      value: 'spb',\n      label: 'СПБ'\n    }, {\n      value: 'vorkuta',\n      label: 'Воркута'\n    }, {\n      value: 'nt',\n      label: 'Нижний Тагил'\n    }]\n  }, {\n    country: 'ukraine',\n    cityList: [{\n      value: 'kyiv',\n      label: 'Киев'\n    }, {\n      value: 'lwiv',\n      label: 'Львов'\n    }, {\n      value: 'kharkiv',\n      label: 'Харьков'\n    }, {\n      value: 'dnipro',\n      label: 'Днепр'\n    }]\n  }];\n  return manualMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0412\\u0430\\u0448\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\\u043F\\u043E\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: countries.find(country => country.value === props.formData.country),\n      options: countries,\n      onChange: e => {\n        console.log(e);\n        props.updateFormData({\n          ...props.formData,\n          country: e.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0413\\u043E\\u0440\\u043E\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: props.formData.country ? cities.find(country => country.country === props.formData.country).cityList.find(city => city.value === props.formData.city) : '',\n      options: props.formData.country ? cities.find(country => country.country === props.formData.country).cityList : '',\n      onChange: e => {\n        props.updateFormData({\n          ...props.formData,\n          city: e.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: location,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        margin: '10% auto 4% auto'\n      },\n      children: \" \\u0412\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0451 \\u043C\\u0435\\u0441\\u0442\\u043E\\u043F\\u043E\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loc-text\",\n      children: \" \\u0412\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E \\u043C\\u0435\\u0441\\u0442\\u043E\\u043F\\u043E\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u044F, \\u0447\\u0442\\u043E\\u0431\\u044B \\u043F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043B\\u044E\\u0434\\u0435\\u0439 \\u043F\\u043E\\u0431\\u043B\\u0438\\u0437\\u043E\\u0441\\u0442\\u0438 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"enter-loc-button\",\n      onClick: changeMode,\n      children: \"\\u0412\\u0432\\u0435\\u0441\\u0442\\u0438 \\u0432\\u0440\\u0443\\u0447\\u043D\\u0443\\u044E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 13\n  }, this);\n};\n_s(FormLocation, \"OeZKg+OftBxvSzppPq8Vg0Bz0yA=\");\n_c = FormLocation;\nvar _c;\n$RefreshReg$(_c, \"FormLocation\");","map":{"version":3,"names":["React","useState","Select","location","jsxDEV","_jsxDEV","FormLocation","props","_s","manualMode","setManualMode","changeMode","val","countries","value","label","cities","country","cityList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","find","formData","options","onChange","e","console","log","updateFormData","city","src","alt","style","margin","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Александр/Documents/Web/Mir 1/mir_frontend/src/pages/page-reg/forms/form-location.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport './form.css';\r\nimport Select from 'react-select';\r\nimport location from '../../../assets/icons/location.svg';\r\n\r\n\r\nexport const FormLocation = (props) =>\r\n{\r\n    const [manualMode, setManualMode] = useState(false);\r\n\r\n    const changeMode = () => {\r\n        setManualMode((val) => !val)\r\n    }\r\n\r\n    const countries = [\r\n        {\r\n            value: 'belarus',\r\n            label:'Беларусь',\r\n        },\r\n        {\r\n            value: 'russia',\r\n            label:'Россия',\r\n        },\r\n        {\r\n            value: 'ukraine',\r\n            label:'Украина',\r\n        }\r\n    ]\r\n\r\n    const cities = [\r\n        {\r\n            country: 'belarus',\r\n            cityList: [\r\n                {\r\n                    value: 'minsk',\r\n                    label: 'Минск',\r\n                },\r\n                {\r\n                    value: 'vitebsk',\r\n                    label: 'Витебск',\r\n                },\r\n                {\r\n                    value: 'brest',\r\n                    label: 'Брест',\r\n                },\r\n                {\r\n                    value: 'lipnishki',\r\n                    label: 'Липнишки',\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            country: 'russia',\r\n            cityList: [\r\n                {\r\n                    value: 'moskow',\r\n                    label: 'Москва',\r\n                },\r\n                {\r\n                    value: 'spb',\r\n                    label: 'СПБ',\r\n                },\r\n                {\r\n                    value: 'vorkuta',\r\n                    label: 'Воркута',\r\n                },\r\n                {\r\n                    value: 'nt',\r\n                    label: 'Нижний Тагил',\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            country: 'ukraine',\r\n            cityList: [\r\n                {\r\n                    value: 'kyiv',\r\n                    label: 'Киев',\r\n                },\r\n                {\r\n                    value: 'lwiv',\r\n                    label: 'Львов',\r\n                },\r\n                {\r\n                    value: 'kharkiv',\r\n                    label: 'Харьков',\r\n                },\r\n                {\r\n                    value: 'dnipro',\r\n                    label: 'Днепр',\r\n                },\r\n            ],\r\n        },\r\n    ]\r\n\r\n    return(\r\n            manualMode ?\r\n            <div className='form'>\r\n                <h1>Введите Ваше местоположение</h1>\r\n                <h2>Страна</h2>\r\n                <Select\r\n                    value={countries.find(country => country.value === props.formData.country)}\r\n                    options={countries}\r\n                    onChange={(e) => {\r\n                        console.log(e)\r\n                        props.updateFormData(\r\n                        {\r\n                            ...props.formData,\r\n                            country: e.value,\r\n                        })}}\r\n                />\r\n                <h2>Город</h2>\r\n                <Select\r\n                    value={props.formData.country ? \r\n                        cities.find(country => country.country === props.formData.country).cityList.find(city => city.value === props.formData.city)\r\n                        :\r\n                        ''\r\n                    }\r\n                    options={props.formData.country ? \r\n                        cities.find(country => country.country === props.formData.country).cityList\r\n                        :\r\n                        ''\r\n                    }\r\n                    onChange={(e) => {\r\n                        props.updateFormData(\r\n                        {\r\n                            ...props.formData,\r\n                            city: e.value,\r\n                        })}}\r\n                />\r\n            </div>\r\n            :\r\n            <div className='location-form'>    \r\n                <img src={location} alt=''/>\r\n                <h1 style={{margin: '10% auto 4% auto'}}> Включите своё местоположение </h1>\r\n                <p className='loc-text'> Включите использование вашего местоположения, чтобы показать людей поблизости </p>\r\n                <button className='enter-loc-button' onClick={changeMode}>\r\n                    Ввести вручную\r\n                </button>\r\n            </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}